<!--
  Copyright 2010 David Valeri.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
    xmlns:sec="http://cxf.apache.org/configuration/security"
    xmlns:addressing="http://cxf.apache.org/ws/addressing"
    xmlns:service="http://customerservice.example.com/"
    xmlns:ehcache="http://www.springmodules.org/schema/ehcache"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
        http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd
        http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd
        http://cxf.apache.org/ws/addressing http://cxf.apache.org/schemas/ws/addressing.xsd
        http://www.springmodules.org/schema/ehcache http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd">

  <import resource="classpath:META-INF/cxf/cxf.xml" />
  <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
  <import resource="classpath:META-INF/cxf/cxf-extension-http-jetty.xml" />
  
  <jaxws:endpoint
        serviceName="service:CustomerServiceService" 
        endpointName="service:CustomerServicePort"
        address="https://localhost:8443/services/CustomerService"
        wsdlLocation="classpath:/wsdl/CustomerService.wsdl"
        implementor="#defaultCustomerService">
    <jaxws:features>
      <bean class="org.apache.cxf.feature.LoggingFeature" />
    </jaxws:features>
  </jaxws:endpoint>
  
  <bean
      id="defaultCustomerService"
      class="valeri.blog.examples.cxf_tls_fips.DefaultCusomerService"/>
      
  <!-- Define the Jetty HTTP server configuration for the CXF bus. -->
  <httpj:engine-factory bus="cxf">
    <httpj:identifiedTLSServerParameters id="secure">
      <httpj:tlsServerParameters secureSocketProtocol="TLS">
        <sec:clientAuthentication required="true" want="true"/>
        <!-- Define the keystore for the server identity as a classpath resource.
             In a production system, these properties would be encrypted/obfuscated using
             a library such as Jasypt (http://www.jasypt.org/) and Spring's property placeholder
             capabilities. -->
        <sec:keyManagers>
          <sec:keyStore type="PKCS11" provider="SunPKCS11-nss-server"
                password="Password12345!"/>
        </sec:keyManagers>
        <sec:trustManagers>
          <!-- In a production system, these properties would be encrypted/obfuscated using
               a library such as Jasypt (http://www.jasypt.org/) and Spring's property placeholder
               capabilities. -->
          <sec:keyStore type="PKCS11" provider="SunPKCS11-nss-server"
                password="Password12345!"/>
        </sec:trustManagers>
        <sec:cipherSuitesFilter>
          <sec:include>SSL_RSA_WITH_3DES_EDE_CBC_SHA</sec:include>
          <sec:include>SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA</sec:include>
          <sec:include>TLS_RSA_WITH_AES_128_CBC_SHA</sec:include>
          <sec:include>TLS_DHE_DSS_WITH_AES_128_CBC_SHA</sec:include>
          <sec:include>TLS_DHE_RSA_WITH_AES_128_CBC_SHA</sec:include>
          <sec:include>TLS_RSA_WITH_AES_256_CBC_SHA</sec:include>
          <sec:include>TLS_DHE_DSS_WITH_AES_256_CBC_SHA</sec:include>
          <sec:include>TLS_DHE_RSA_WITH_AES_256_CBC_SHA</sec:include>
          <!-- The suites below have been disabled due to
               http://bugs.sun.com/view_bug.do?bug_id=6763530 -->
          <!-- <sec:include>TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDH_RSA_WITH_AES_128_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA</sec:include>  -->
          <!-- <sec:include>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDH_anon_WITH_AES_128_CBC_SHA</sec:include> -->
          <!-- <sec:include>TLS_ECDH_anon_WITH_AES_256_CBC_SHA</sec:include> -->
        </sec:cipherSuitesFilter>
      </httpj:tlsServerParameters>
    </httpj:identifiedTLSServerParameters>
    <!-- Define the HTTPS port, crypto configuration, and other properties. -->
    <httpj:engine port="8443">
      <httpj:tlsServerParametersRef id="secure" />
      <httpj:threadingParameters minThreads="5" maxThreads="15" />
    </httpj:engine>
  </httpj:engine-factory>
            
</beans>
